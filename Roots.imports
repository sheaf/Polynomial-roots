import Overture
    ( otherwise,
      ($),
      fromIntegral,
      Eq((==)),
      Fractional((/)),
      Num((*), (+), (-), negate),
      Ord((<=), (>)),
      Double,
      Int,
      (^),
      reverse,
      dropWhile,
      (=<<),
      isNothing,
      Category((.)),
      maximum,
      concatMap,
      Complex((:+)),
      take,
      map,
      length,
      last,
      (++),
      snd,
      fst )
import Types
    ( Config(Config),
      Root,
      RealBound,
      Degree,
      IterCoeffs,
      Polynomial,
      Coefficient(..) )
import Trees
    ( getAllLeafPolynomials, constructForest, constructPolyForest )
import Data.Tree ( flatten )
import Data.Maybe ( fromJust )
import Interval
    ( ComplexInterval, Interval((+!), (-!), (/!), elemI), absI )
import Plotting ()
import Numeric.GSL.Polynomials ( polySolve )
import Numeric.LinearAlgebra.LAPACK ( eigOnlyR, eigOnlyC )
import Foreign.Storable ( Storable )
import qualified Data.Packed.Matrix as M
    ( Matrix, Element, fromColumns )
import qualified Data.Packed.Vector as V ( fromList, toList )
